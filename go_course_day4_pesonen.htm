<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:0cm;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:72.0pt 72.0pt 72.0pt 72.0pt;}
div.WordSection1
	{page:WordSection1;}
-->
</style>

</head>

<body lang=FI link=blue vlink="#954F72">

<div class=WordSection1>

<p class=MsoNormal><b><span lang=EN-US>Go programming intensive course Day4
homework</span></b></p>

<p class=MsoNormal><span lang=EN-US>Today (Thursday) as last “homework” we
started to work on our own projects which should be ready for Friday morning. I
decided to create a filematcher that checks the content of two files and gives
the percentage those files match. There is a normal mode for text files etc.
and an image mode where the program resizes the images to match them better
since it reduces the number of pixels. The program repository can be found behind
this link: </span><a
href="https://github.com/Pess1/GoProgramming/tree/master/finproject"><span
lang=EN-US>https://github.com/Pess1/GoProgramming/tree/master/finproject</span></a><span
lang=EN-US>. There you can download the program for Windows64bit (filematcherWin64.exe)
or for Linux64bit (filematcher). I’ll add more binaries later.</span></p>

<p class=MsoNormal><span lang=EN-US>Here are some screenshots how the program
looks like when it is used.</span></p>

<p class=MsoNormal><span lang=EN-US>First example is with the normal mode engaged
where t1.txt has the content “aaaa” and t2.txt has “aaab”.</span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=498 height=161
id="Kuva 1" src="go_course_day4_pesonen_tiedostot/image001.png"
alt="Kuva, joka sisältää kohteen valkokangas, musta, istuminen, televisio&#10;&#10;Kuvaus luotu automaattisesti"></span></p>

<p class=MsoNormal><span lang=EN-US>Second example is with the image mode engaged.
I have to still play a little with the image resizing to match the images
better. At least if it really is the same picture the answer is 100%. This
function support JPG and PNG. </span></p>

<p class=MsoNormal><span lang=EN-US><img border=0 width=555 height=161
id="Kuva 2" src="go_course_day4_pesonen_tiedostot/image002.png"
alt="Kuva, joka sisältää kohteen näyttökuva, valkokangas, näyttö, televisio&#10;&#10;Kuvaus luotu automaattisesti"></span></p>

</div>

</body>

</html>
